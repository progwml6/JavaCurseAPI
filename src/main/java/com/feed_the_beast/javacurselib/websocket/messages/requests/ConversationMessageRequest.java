package com.feed_the_beast.javacurselib.websocket.messages.requests;

import com.feed_the_beast.javacurselib.utils.CurseGUID;

import javax.annotation.Nonnull;

/**
 * Represents outgoing message with optional attachment
 */
public class ConversationMessageRequest extends BaseRequest implements Request {
    /**
     * Conversation for particular message. Group or private conversation
     */
    public CurseGUID conversationID;
    /**
     * Optional attachment. UUID(0, 0) by default
     */
    public CurseGUID attachmentID = CurseGUID.newFromZeroUUID();
    /**
     * TODO: document
     */
    public int attachmentRegionID = 0;
    /**
     * Random UUID generated by client. Server uses this UUID in {@link com.feed_the_beast.javacurselib.websocket.messages.notifications.ConversationMessageResponse}
     */
    public CurseGUID clientID;
    /**
     * Message.
     */
    // TODO: test with null or empty message
    public String message;

    /**
     * A new message with known {@code clientID}. Useful if user implements own message queue
     *
     * Note. Might be removed in future.
     *
     * @param conversationID Conversation to send a message
     * @param message Message to be send
     * @param clientID Random client generated ID
     */
    public ConversationMessageRequest(@Nonnull CurseGUID conversationID, String message, @Nonnull CurseGUID clientID) {
        this.conversationID = conversationID;
        this.message = message;
        this.clientID = clientID;
    }

    /**
     * A new message with randomly generate {@code clientID}
     *
     * @param conversationID Conversation to send a message
     * @param message Message to be send
     */
    public ConversationMessageRequest(@Nonnull CurseGUID conversationID, String message) {
        this.conversationID = conversationID;
        this.message = message;
        this.clientID = CurseGUID.newRandomUUID();
    }

    @Override
    public RequestsServiceContractType getTypeID() {
        return RequestsServiceContractType.CONVERSATION_MESSAGE_REQUEST;
    }
}